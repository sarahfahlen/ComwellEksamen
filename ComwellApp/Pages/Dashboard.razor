@page "/dashboard"
@inject NavigationManager navManager
@inject ILoginService lService
@using ComwellApp.Services.Login
@using Shared

<PageTitle>Dashboard</PageTitle>

<!-- Overskrift og knap -->
<div class="overskrift-knap-wrapper">
    <h1 class="overskrift">Elevoversigt</h1>

    @if (loggedIn is not null && (loggedIn.Rolle == "Admin" || loggedIn.Rolle == "HR"))
    {
        <button class="btn btn-primary opret-knap" @onclick="OnClickOpret">Opret elev</button>
    }
</div>

<!-- Elevkort visning -->
<div class="elevkort-container">
    @if (elever == null || !elever.Any())
    {
        <p>Ingen elever fundet...</p>
    }
    else
    {
        @foreach (var elev in elever)
        {
            var antalOpnaaet = 150;
            var antalIalt = 250;
            double procent = (double)antalOpnaaet / antalIalt * 100;
            int procentInt = (int)Math.Round(procent);
            string gradient = "linear-gradient(to right, #e4a1a1 0%, #e4bfa1 33%, #e4d6a1 66%, #6fa96f 100%)";

            <div class="item-card">
                <div class="item-grid">
                    <!-- Venstre kolonne -->
                    <div class="item-left">
                        <h5>@elev.Navn</h5>
                        <p>Telefon: @elev.BrugerTelefon</p>
                        <p>Køkkenchef: @elev.MinElevplan?.Ansvarlig?.Navn</p>
                        <p>Elev siden: @elev.StartDato?.ToString("dd-MM-yyyy")</p>
                    </div>

                    <!-- Midterkolonne -->
                    <div class="item-center">
                        <p>Lokation: @elev.Afdeling?.LokationNavn</p>
                        <p>Delmål opnået: @antalOpnaaet / @antalIalt</p>
                        <div class="statusbar-outer">
                            <div class="statusbar-inner" style="background: @gradient; clip-path: inset(0 calc(100% - @procentInt%) 0 0);"></div>
                        </div>
                    </div>

                    <!-- Højre kolonne: billede -->
                    <div class="item-right">
                        <img src="@elev.Billede" alt="Profilbillede" />
                    </div>
                </div>

                <!-- "Se elevplan"-knap -->
                @if (
                    (loggedIn.BrugerId == elev.BrugerId && (loggedIn.Rolle == "Elev" || loggedIn.Rolle == "FaglærtKok")) ||
                    (loggedIn?.Rolle == "Admin" || loggedIn.Rolle == "Køkkenchef" || loggedIn.Rolle == "HR")
                )
                {
                    <button class="btn btn-outline-secondary se-elevplan-knap" @onclick="@(() => GåTilElevplan(elev.BrugerId))">
                        Se elevplan
                    </button>
                }
            </div>
        }
    }
</div>

@code {
    private Bruger? loggedIn; //Gemmer den bruger som er logget ind
    private List<Bruger> alleElever = new(); // Indeholder alle elever (ufiltreret)
    private List<Bruger> elever = new(); //indeholder alle filtreret elever, der skal vises

    protected override async Task OnInitializedAsync()
    {
        loggedIn = await lService.GetUserLoggedIn();
        if (loggedIn == null)
        {
            navManager.NavigateTo("login/dashboard");
            return;
        }

        alleElever = await lService.HentAlleGemteEleverFraLocalStorage();
        FiltrerElever();
    }
    //Vis kun elever med samme lokation for elever og faglærte kokke – ellers vis alle.
    private void FiltrerElever()
    {
        //Stopper funktionen, hvis der ikke er nogen logget ind
        if (loggedIn == null) return;
        
        // Hvis brugeren er elev eller faglært kok.
        if (loggedIn.Rolle == "Elev" || loggedIn.Rolle == "FaglærtKok" || loggedIn.Rolle == "Køkkenchef")
        {
            // Filtrér elever, så kun dem med samme lokation som den loggede vises
            elever = alleElever
                .Where(e => e.Afdeling?.LokationNavn == loggedIn.Afdeling?.LokationNavn)
                .ToList();
        }
        else
        {
            elever = alleElever;
        }
    }
   //Navigerer til siden for at oprette en ny elev.
    private void OnClickOpret()
    {
        navManager.NavigateTo("opretelev");
    }
   //Navigerer til den specifikke elevs elevplan.
    private void GåTilElevplan(int elevId)
    {
        navManager.NavigateTo($"elevplan/{elevId}");
    }
}