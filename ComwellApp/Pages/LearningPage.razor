@page "/learning"
@using ComwellApp.Services.Learning
@using ComwellApp.Components
@using ComwellApp.Services.Login
@using Shared

@inject ILearningService leService
@inject ILoginService lService
@inject NavigationManager navManager

<h1>Læringsmoduler</h1>
<div class="laering-wrapper">
    <div class="laering-sidepanel">
        @if (alleFag != null)
        {
            @foreach (var fag in alleFag)
            {
                var aaben = dropdownAaben.GetValueOrDefault(fag.FagomraadeNavn, false);

                <div class="laering-dropdown-wrapper">
                    <button class="laering-dropdown-knap" @onclick="() => ToggleDropdown(fag.FagomraadeNavn)">
                        <span class="fagområde-navn"> <strong>@fag.FagomraadeNavn </strong> </span>
                        <span class="dropdown-pil @(aaben ? "open" : "")">▸</span>
                    </button>

                    <div class="laering-dropdown-boks @(aaben ? "vis" : "skjul")">
                        @foreach (var underemne in fag.ListUnderemne)
                        {
                            <button class="laering-underemne-knap full-width-button @(valgtUnderemne == underemne ? "aktiv-underemne" : "")"
                                    @onclick="() => valgtUnderemne = underemne">
                                <span class="underemne-indhold @(valgtUnderemne == underemne ? "aktiv-underemne-tekst" : "")">@underemne.UnderemneNavn</span>
                            </button>
                        }
                    </div>
                </div>
            }
        }
    </div>

    <div class="laering-indhold">
        @if (valgtUnderemne != null)
        {
            <div class="laering-element-container">
                @foreach (var element in valgtUnderemne.ListElement)
                {
                    <div class="laering-elementkort">
                        <button class="element-navn-knap" @onclick="() => ToggleElement(element.ElementNavn)">
                            <span><h4>@element.ElementNavn</h4></span>
                            <span class="dropdown-pil @(ElementErAaben(element.ElementNavn) ? "open" : "")">▸</span>
                        </button>

                        @if (ElementErAaben(element.ElementNavn))
                        {
                            <div class="element-indhold">
                                @if (element.ElementType == "opskrift")
                                {
                                    <div class="opskrift-container">
                                        <h6 class="opskrift-titel">@element.ElementNavn</h6>
                                        <p class="opskrift-tekst">@element.Beskrivelse</p>
                                    </div>
                                }
                                else if (element.ElementType == "quiz")
                                {
                                    <QuizComponent ElementNavn="@element.ElementNavn" Spoergsmaal="@element.ListSpoergsmaal" />
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <p>Vælg et underemne for at se indhold.</p>
        }
    </div>
</div>

@code {
    private List<Fagomraade>? alleFag;
    private Dictionary<string, bool> dropdownAaben = new();
    private Underemne? valgtUnderemne;
    private Dictionary<string, bool> elementAaben = new();
    private Bruger? loggedIn;

    // Henter alle fagområder ved start og initialiserer dropdown-state
    protected override async Task OnInitializedAsync()
    {
        loggedIn = await lService.GetUserLoggedIn();

        if (loggedIn == null)
        {
            navManager.NavigateTo("login/learning");
            return;
        }
        alleFag = await leService.HentAlleFagomraader();
        foreach (var fag in alleFag)
        {
            dropdownAaben[fag.FagomraadeNavn] = false;
        }
    }

    // Åbner/lukker dropdown for fagområde
    private void ToggleDropdown(string fagNavn)
    {
        dropdownAaben[fagNavn] = !dropdownAaben.GetValueOrDefault(fagNavn, false);
    }

    // Åbner/lukker visning af elementindhold (opskrift eller quiz)
    private void ToggleElement(string elementNavn)
    {
        if (elementAaben.ContainsKey(elementNavn))
            elementAaben[elementNavn] = !elementAaben[elementNavn];
        else
            elementAaben[elementNavn] = true;
    }

    // Tjekker om et element er åbent
    private bool ElementErAaben(string elementNavn)
    {
        return elementAaben.TryGetValue(elementNavn, out var erAaben) && erAaben;
    }
}

