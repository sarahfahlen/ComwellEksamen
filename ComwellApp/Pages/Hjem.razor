@page "/"                  
@page "/hjem"

@inject ILoginService lService         
@inject NavigationManager navManager   

@using ComwellApp.Services.Brugere
@using ComwellApp.Services.Elevplan
@using ComwellApp.Services.Login       
@using Shared                          

<PageTitle>Hjem</PageTitle>            
 
<div class="page-wrapper hjem-baggrund">
    
    <!-- Viser navnet på den loggede bruger -->
    <h3 class="overskrift">Velkommen, @loggedIn?.Navn</h3>

    <div class="intro-container">
        <p class="intro-text">
            Her kan du få et hurtigt overblik over dine læringsmål, kommende deadlines og vigtig praktisk information.
            Klik på boksene for at dykke ned i indholdet og finde relevante kontaktoplysninger, hvis du har brug for hjælp.
        </p>
    </div>

    <div class="dashboard-box-container">
        <div class="dashboard-box klikbarsted deadlines" @onclick="ÅbenDeadlinesModal">
            <h4>Kommende Deadlines</h4>
            @if (kommendeDeadlines.Any())
            {
                <ul>
                    @foreach (var deadline in kommendeDeadlines.Take(2))
                    {
                        <li>
                            <strong>@deadline.Titel</strong> – @deadline.Deadline?.ToString("dd.MM.yyyy")
                        </li>
                    }
                </ul>
                @if (kommendeDeadlines.Count > 2)
                {
                    <p class="deadlinestekst">Klik for at se alle @kommendeDeadlines.Count deadlines</p>
                }
            }
            else
            {
                <p>Ingen kommende deadlines de næste 7 dage.</p>
            }
        </div>

        @if (loggedIn?.Rolle == "Elev")
        {
            <div class="dashboard-box klikbarsted">
                <h4>Learning Module</h4>
            </div>
        }

        <div class="dashboard-box klikbarsted" @onclick="ÅbenModal">
            <h4>Praktisk Info</h4>
            <p>Klik her for kontaktoplysninger</p>
        </div>
    </div>


    @if (visModal)
{
    <!-- Modal vises kun hvis brugeren har klikket -->
    <div class="modal-overlay" @onclick="LukModal">
        <div class="modal-content" @onclick:stopPropagation>
            <h5>Kontaktoplysninger</h5>
            <ul>
                <li><strong>Køkkenchef:</strong> Theis Christensen – 12 34 56 78</li>
                <li><strong>HR:</strong> Jane Mayes Harkes – 23 45 67 89</li>
                <li><strong>Hvis du er syg:</strong> Ring til SOV – 98 76 54 32</li>
                <li><strong>Adresse:</strong> Comwell Vej 12, 8000 Aarhus</li>
            </ul>
            <button class="btn btn-secondary mt-3" @onclick="LukModal">Luk</button>
        </div>
    </div>
}
@if (visDeadlinesModal)
{
    <div class="modal-overlay" @onclick="LukDeadlinesModal">
        <div class="modal-content" @onclick:stopPropagation>
            <h5>Alle deadlines – næste 7 dage</h5>

            <ul>
                @foreach (var d in kommendeDeadlines)
                {
                    <li style="margin-bottom: 0.75rem;">
                        <strong>@d.Titel</strong> – @d.Deadline?.ToString("dd.MM.yyyy")
                        @if (!string.IsNullOrWhiteSpace(d.DeadlineKommentar))
                        {
                            <br />
                            <small><em>@d.DeadlineKommentar</em></small>
                        }
                    </li>
                }
            </ul>

            <button class="btn btn-secondary mt-3" @onclick="LukDeadlinesModal">Luk</button>
        </div>
    </div>
}
</div>
@code {
    // Her gemmer vi den bruger der er logget ind
    private Bruger? loggedIn;     
    private bool visDeadlinesModal = false;
    // Styrer om modalen (kontaktinfo) vises eller ej
    private bool visModal = false;    
    private List<Delmaal> kommendeDeadlines = new();

    [Inject] private IElevplanService eService { get; set; }
    [Inject] private IBrugereService bService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        loggedIn = await lService.GetUserLoggedIn();

        if (loggedIn == null)
        {
            navManager.NavigateTo("login/hjem");
            return;
        }

        if (loggedIn.Rolle == "Elev")
        {
            var elevplan = await bService.HentElevplanForBruger(loggedIn.BrugerId);
            if (elevplan != null)
            {
                var iDag = DateOnly.FromDateTime(DateTime.Today);
                var om7Dage = iDag.AddDays(7);

                // Gennemgår alle delmål i alle perioder
                kommendeDeadlines = elevplan.ListPerioder
                    .SelectMany(p => p.ListMaal)
                    .SelectMany(m => m.ListDelmaal)
                        .Where(d => d.Deadline.HasValue &&
                                    !d.Status && // kun hvis status er false
                                    d.Deadline.Value >= iDag &&
                                    d.Deadline.Value <= om7Dage)
                    .OrderBy(d => d.Deadline)
                    .ToList();
            }
        }
    }

    // Når brugeren klikker på "Praktisk info", vis modal
    private void ÅbenModal()
    {
        visModal = true;
    }

    // Når brugeren klikker udenfor modal, eller på "Luk", skjul modal
    private void LukModal()
    {
        visModal = false;
    }
    private void ÅbenDeadlinesModal()
    {
        visDeadlinesModal = true;
    }

    private void LukDeadlinesModal()
    {
        visDeadlinesModal = false;
    }
}

