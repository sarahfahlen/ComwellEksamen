@using Shared
<div class="delmaal-container">
    @foreach (var delmaal in maal.ListDelmaal)
    {
        <div class="delmaal">
            <h4 class="delmaal-overskrift">@delmaal.Titel</h4>
            <p>Beskrivelse: @delmaal.Beskrivelse</p>
            <p>Type: @delmaal.DelmaalType</p>
            <p>Ansvarlig: @delmaal.Ansvarlig</p>
            <p>
                Deadline: @(delmaal.Deadline != null
                                  ? delmaal.Deadline?.ToString("dd/MM-yyyy")
                                  : delmaal.DeadlineKommentar)
            </p>
            <p> Kommentar:
                <button class="kommentar-knap" @onclick="() => OnInputDelmaal.InvokeAsync(delmaal.DelmaalId)">
                    Se kommentar
                </button>
            </p>
            @if (delmaal.Status && !string.IsNullOrWhiteSpace(delmaal.StatusLog))
            {
                <p class="status-log">@delmaal.StatusLog</p>
            }

            <div class="status-badge @(delmaal.Status ? "gennemført" : "ikke-gennemført")"
                 @onclick="() => OnToggleStatus.InvokeAsync(delmaal)">
                @(delmaal.Status ? "Gennemført" : "Ikke gennemført")
            </div>
        </div>
    }
</div>
@code {
    [Parameter] public required Maal maal { get; set; }
    
    //Sender det valgte delmåls ID tilbage til parent komponenten (Elevplan side), så vi kan bruge åbenKommentar
    [Parameter] public required EventCallback<int> OnInputDelmaal { get; set; }
    
    //Samme som ovenfor, men så vi kan bruge ToggleStatus for hvert delmål
    [Parameter] public EventCallback<Delmaal> OnToggleStatus { get; set; }




}